Cog0  INIT $0000_0000 $0000_0000 load
Cog0  INIT $0000_0EB8 $0000_B2E8 jump
Cog0  blocksUsed = 0, blocksFree = 3_968, fileCount = 0
Cog0
Cog0    All Files:
Cog0
Cog0  * Test #1: Ensure we have no files at start
Cog0     -> pass
Cog0
Cog0  * Test #2: BAD: Read when file doesn't exist
Cog0     ECode: E_FILE_NOT_FOUND: File not present
Cog0     -> pass
Cog0
Cog0   - report on chip S/N and Driver version
Cog0  CHIP Serial Number: $E461_2D03-$D35B_1A2A
Cog0
Cog0   - get and parse out Driver version
Cog0  Driver: flash_fs v1.3.0
Cog0
Cog0
Cog0   ------------------------------------------------------------
Cog0  * Test Group: Head block only - partially filled with 5 BYTEs
Cog0
Cog0  * Test #3: Open File for write
Cog0     ECode: SUCCESS: No error
Cog0     -> pass
Cog0
Cog0  * Test #4: Write N BYTEs
Cog0    Sub-Test Results: Pass: 5, Fail: 0
Cog0
Cog0  * Test #5: ensure no errors on writes
Cog0     ECode: SUCCESS: No error
Cog0     -> pass
Cog0
Cog0    File: [rw10bytes.bin] pending commit
Cog0    # 1 Blocks in chain:
Cog0      1: [$0000] HEAD/last, thisID=0, endPtr=$008D, lifeCycle [erased], sig=[$08D0_00FC]
Cog0
Cog0  * Test #6: Close written file
Cog0     ECode: SUCCESS: No error
Cog0     -> pass
Cog0
Cog0    File: [rw10bytes.bin], bytesUsed = 5, bytes_free = 3_951, block_count = 1
Cog0
Cog0  * Test #7: Ensure expected file system changes
Cog0  * post file write
Cog0    # FileSystem: 1, 3_967, 1
Cog0    # files: 1
Cog0    # blocks used: 1
Cog0     -> pass
Cog0
Cog0  * Test #8: Ensure expected file stats
Cog0    File: [rw10bytes.bin]
Cog0    # 1 Blocks in file:
Cog0      1: [$09E8] HEAD/last, thisID=0, endPtr=$008D, lifeCycle [ACTIVE-3], sig=[$08D0_007C]
Cog0    # blocks: 1
Cog0    # bytes used: 5
Cog0     -> pass
Cog0
Cog0  * Test #9: Open File for read
Cog0     ECode: SUCCESS: No error
Cog0     -> pass
Cog0
Cog0  * Test #10: read expected N BYTEs
Cog0    Sub-Test Results: Pass: 5, Fail: 0
Cog0
Cog0  * Test #11: ensure no errors on reads
Cog0     ECode: SUCCESS: No error
Cog0     -> pass
Cog0
Cog0  * Test #12: BAD: read one more BYTE than written
Cog0     ECode: E_END_OF_FILE: no more data available, at end of file
Cog0     -> pass
Cog0
Cog0  * Test #13: Close read file
Cog0     ECode: SUCCESS: No error
Cog0     -> pass
Cog0
Cog0    All Files:
Cog0  rw10bytes.bin, Bytes = 5, ID = 1, @Buff={binary data}
Cog0
Cog0
Cog0   ------------------------------------------------------------
Cog0  * Test Group: Head block only (replace file) - partially filled with 10 BYTEs
Cog0
Cog0  * Test #14: Open File for write
Cog0     ECode: SUCCESS: No error
Cog0     -> pass
Cog0
Cog0  * Test #15: Write N BYTEs
Cog0    Sub-Test Results: Pass: 10, Fail: 0
Cog0
Cog0  * Test #16: ensure no errors on writes
Cog0     ECode: SUCCESS: No error
Cog0     -> pass
Cog0
Cog0    File: [rw10bytes.bin] pending commit
Cog0    # 1 Blocks in chain:
Cog0      1: [$0000] HEAD/last, thisID=0, endPtr=$0092, lifeCycle [erased], sig=[$0920_00FC]
Cog0
Cog0  * Test #17: Close written file
Cog0     ECode: SUCCESS: No error
Cog0     -> pass
Cog0
Cog0    File: [rw10bytes.bin], bytesUsed = 10, bytes_free = 3_946, block_count = 1
Cog0
Cog0  * Test #18: Ensure expected file system changes
Cog0  * post file write
Cog0    # FileSystem: 1, 3_967, 1
Cog0    # files: 1
Cog0    # blocks used: 1
Cog0     -> pass
Cog0
Cog0  * Test #19: Ensure expected file stats
Cog0    File: [rw10bytes.bin]
Cog0    # 1 Blocks in file:
Cog0      1: [$0B55] HEAD/last, thisID=0, endPtr=$0092, lifeCycle [ACTIVE-5], sig=[$0920_00BC]
Cog0    # blocks: 1
Cog0    # bytes used: 10
Cog0     -> pass
Cog0
Cog0  * Test #20: Open File for read
Cog0     ECode: SUCCESS: No error
Cog0     -> pass
Cog0
Cog0  * Test #21: read expected N BYTEs
Cog0    Sub-Test Results: Pass: 10, Fail: 0
Cog0
Cog0  * Test #22: ensure no errors on reads
Cog0     ECode: SUCCESS: No error
Cog0     -> pass
Cog0
Cog0  * Test #23: BAD: read one more BYTE than written
Cog0     ECode: E_END_OF_FILE: no more data available, at end of file
Cog0     -> pass
Cog0
Cog0  * Test #24: Close read file
Cog0     ECode: SUCCESS: No error
Cog0     -> pass
Cog0
Cog0    All Files:
Cog0  rw10bytes.bin, Bytes = 10, ID = 1, @Buff={binary data}
Cog0
Cog0
Cog0   ------------------------------------------------------------
Cog0  * Test Group: Head block only - partially filled with 9 WORDs
Cog0
Cog0  * Test #25: Open File for write
Cog0     ECode: SUCCESS: No error
Cog0     -> pass
Cog0
Cog0  * Test #26: Write N WORDs
Cog0    Sub-Test Results: Pass: 9, Fail: 0
Cog0
Cog0  * Test #27: ensure no errors on writes
Cog0     ECode: SUCCESS: No error
Cog0     -> pass
Cog0
Cog0    File: [rw9words.bin] pending commit
Cog0    # 1 Blocks in chain:
Cog0      1: [$0000] HEAD/last, thisID=1, endPtr=$009A, lifeCycle [erased], sig=[$09A0_01FC]
Cog0
Cog0  * Test #28: Close written file
Cog0     ECode: SUCCESS: No error
Cog0     -> pass
Cog0
Cog0    File: [rw9words.bin], bytesUsed = 18, bytes_free = 3_938, block_count = 1
Cog0
Cog0  * Test #29: Ensure expected file system changes
Cog0  * post file write
Cog0    # FileSystem: 2, 3_966, 2
Cog0    # files: 2
Cog0    # blocks used: 2
Cog0     -> pass
Cog0
Cog0  * Test #30: Ensure expected file stats
Cog0    File: [rw9words.bin]
Cog0    # 1 Blocks in file:
Cog0      1: [$02E9] HEAD/last, thisID=1, endPtr=$009A, lifeCycle [ACTIVE-3], sig=[$09A0_017C]
Cog0    # blocks: 1
Cog0    # bytes used: 18
Cog0     -> pass
Cog0
Cog0  * Test #31: Open File for read
Cog0     ECode: SUCCESS: No error
Cog0     -> pass
Cog0
Cog0  * Test #32: read expected N WORDs
Cog0    Sub-Test Results: Pass: 9, Fail: 0
Cog0
Cog0  * Test #33: ensure no errors on reads
Cog0     ECode: SUCCESS: No error
Cog0     -> pass
Cog0
Cog0  * Test #34: BAD: read one more WORD than written
Cog0     ECode: E_END_OF_FILE: no more data available, at end of file
Cog0     -> pass
Cog0
Cog0  * Test #35: Close read file
Cog0     ECode: SUCCESS: No error
Cog0     -> pass
Cog0
Cog0    All Files:
Cog0  rw10bytes.bin, Bytes = 10, ID = 1, @Buff={binary data}
Cog0  rw9words.bin, Bytes = 18, ID = 2, @Buff={binary data}
Cog0
Cog0  * Test #36: Ensure we have 2 files written so far
Cog0     -> pass
Cog0
Cog0
Cog0   ------------------------------------------------------------
Cog0  * Test Group: Head block only - partially filled with 12 LONGs
Cog0
Cog0  * Test #37: Open File for write
Cog0     ECode: SUCCESS: No error
Cog0     -> pass
Cog0
Cog0  * Test #38: Write N LONGs
Cog0    Sub-Test Results: Pass: 12, Fail: 0
Cog0
Cog0  * Test #39: ensure no errors on writes
Cog0     ECode: SUCCESS: No error
Cog0     -> pass
Cog0
Cog0    File: [rw12longs.bin] pending commit
Cog0    # 1 Blocks in chain:
Cog0      1: [$0000] HEAD/last, thisID=2, endPtr=$00B8, lifeCycle [erased], sig=[$0B80_02FC]
Cog0
Cog0  * Test #40: Close written file
Cog0     ECode: SUCCESS: No error
Cog0     -> pass
Cog0
Cog0    File: [rw12longs.bin], bytesUsed = 48, bytes_free = 3_908, block_count = 1
Cog0
Cog0  * Test #41: Ensure expected file system changes
Cog0  * post file write
Cog0    # FileSystem: 3, 3_965, 3
Cog0    # files: 3
Cog0    # blocks used: 3
Cog0     -> pass
Cog0
Cog0  * Test #42: Ensure expected file stats
Cog0    File: [rw12longs.bin]
Cog0    # 1 Blocks in file:
Cog0      1: [$08A0] HEAD/last, thisID=2, endPtr=$00B8, lifeCycle [ACTIVE-3], sig=[$0B80_027C]
Cog0    # blocks: 1
Cog0    # bytes used: 48
Cog0     -> pass
Cog0
Cog0  * Test #43: Open File for read
Cog0     ECode: SUCCESS: No error
Cog0     -> pass
Cog0
Cog0  * Test #44: read expected LONGs
Cog0    Sub-Test Results: Pass: 12, Fail: 0
Cog0
Cog0  * Test #45: ensure no errors on reads
Cog0     ECode: SUCCESS: No error
Cog0     -> pass
Cog0
Cog0  * Test #46: BAD: read one more LONG than written
Cog0     ECode: E_END_OF_FILE: no more data available, at end of file
Cog0     -> pass
Cog0
Cog0  * Test #47: Close read file
Cog0     ECode: SUCCESS: No error
Cog0     -> pass
Cog0
Cog0    All Files:
Cog0  rw10bytes.bin, Bytes = 10, ID = 1, @Buff={binary data}
Cog0  rw9words.bin, Bytes = 18, ID = 2, @Buff={binary data}
Cog0  rw12longs.bin, Bytes = 48, ID = 3, @Buff={binary data}
Cog0
Cog0  * Test #48: Ensure we have 3 files written so far
Cog0     -> pass
Cog0
Cog0
Cog0   ------------------------------------------------------------
Cog0  * Test Group: Head block only - partially filled with 10 STRINGs
Cog0
Cog0  * Test #49: Open File for write
Cog0     ECode: SUCCESS: No error
Cog0     -> pass
Cog0
Cog0  * Test #50: Write 10 STRINGs
Cog0    Sub-Test Results: Pass: 10, Fail: 0
Cog0
Cog0  * Test #51: ensure no errors on writes
Cog0     ECode: SUCCESS: No error
Cog0     -> pass
Cog0
Cog0    File: [rw10strings.zstr] pending commit
Cog0    # 1 Blocks in chain:
Cog0      1: [$0000] HEAD/last, thisID=3, endPtr=$0108, lifeCycle [erased], sig=[$1080_03FC]
Cog0
Cog0  * Test #52: Close written file
Cog0     ECode: SUCCESS: No error
Cog0     -> pass
Cog0
Cog0    File: [rw10strings.zstr], bytesUsed = 128, bytes_free = 3_828, block_count = 1
Cog0
Cog0  * Test #53: Ensure expected file system changes
Cog0  * post file write
Cog0    # FileSystem: 4, 3_964, 4
Cog0    # files: 4
Cog0    # blocks used: 4
Cog0     -> pass
Cog0
Cog0  * Test #54: Ensure expected file stats
Cog0    File: [rw10strings.zstr]
Cog0    # 1 Blocks in file:
Cog0      1: [$0D98] HEAD/last, thisID=3, endPtr=$0108, lifeCycle [ACTIVE-3], sig=[$1080_037C]
Cog0    # blocks: 1
Cog0    # bytes used: 128
Cog0     -> pass
Cog0
Cog0  * Test #55: Open File for read
Cog0     ECode: SUCCESS: No error
Cog0     -> pass
Cog0
Cog0  * Test #56: read expected 10 STRINGs
Cog0    Sub-Test Results: Pass: 20, Fail: 0
Cog0
Cog0  * Test #57: ensure no errors on reads
Cog0     ECode: SUCCESS: No error
Cog0     -> pass
Cog0
Cog0  * Test #58: BAD: read one more STRING than written
Cog0     ECode: E_END_OF_FILE: no more data available, at end of file
Cog0     -> pass
Cog0
Cog0  * Test #59: Close read file
Cog0     ECode: SUCCESS: No error
Cog0     -> pass
Cog0
Cog0    All Files:
Cog0  rw10bytes.bin, Bytes = 10, ID = 1, @Buff={binary data}
Cog0  rw9words.bin, Bytes = 18, ID = 2, @Buff={binary data}
Cog0  rw12longs.bin, Bytes = 48, ID = 3, @Buff={binary data}
Cog0  rw10strings.zstr, Bytes = 128, ID = 4, @Buff={binary data}
Cog0
Cog0
Cog0   ------------------------------------------------------------
Cog0  * Test Group: Head block only - filled with LONGs
Cog0
Cog0  * Test #60: Open File for write
Cog0     ECode: SUCCESS: No error
Cog0     -> pass
Cog0
Cog0  * Test #61: Write N LONGs
Cog0    Sub-Test Results: Pass: 989, Fail: 0
Cog0
Cog0  * Test #62: ensure no errors on writes
Cog0     ECode: SUCCESS: No error
Cog0     -> pass
Cog0
Cog0    File: [fullHeadLongs.bin] pending commit
Cog0    # 1 Blocks in chain:
Cog0      1: [$0000] HEAD/last, thisID=4, endPtr=$0FFC, lifeCycle [erased], sig=[$FFC0_04FC]
Cog0
Cog0  * Test #63: Close written file
Cog0     ECode: SUCCESS: No error
Cog0     -> pass
Cog0
Cog0    File: [fullHeadLongs.bin], bytesUsed = 3_956, bytes_free = 0, block_count = 1
Cog0
Cog0  * Test #64: Ensure expected file system changes
Cog0  * post file write
Cog0    # FileSystem: 5, 3_963, 5
Cog0    # files: 5
Cog0    # blocks used: 5
Cog0     -> pass
Cog0
Cog0  * Test #65: Ensure expected file stats
Cog0    File: [fullHeadLongs.bin]
Cog0    # 1 Blocks in file:
Cog0      1: [$0302] HEAD/last, thisID=4, endPtr=$0FFC, lifeCycle [ACTIVE-3], sig=[$FFC0_047C]
Cog0    # blocks: 1
Cog0    # bytes used: 3_956
Cog0     -> pass
Cog0
Cog0  * Test #66: Open File for read
Cog0     ECode: SUCCESS: No error
Cog0     -> pass
Cog0
Cog0  * Test #67: read expected LONGs
Cog0    Sub-Test Results: Pass: 989, Fail: 0
Cog0
Cog0  * Test #68: ensure no errors on reads
Cog0     ECode: SUCCESS: No error
Cog0     -> pass
Cog0
Cog0  * Test #69: BAD: read one more LONG than written
Cog0     ECode: E_END_OF_FILE: no more data available, at end of file
Cog0     -> pass
Cog0
Cog0  * Test #70: Close read file
Cog0     ECode: SUCCESS: No error
Cog0     -> pass
Cog0
Cog0
Cog0   ------------------------------------------------------------
Cog0  * Test Group: Head block + body block - filled with LONGs full head + 2
Cog0
Cog0  * Test #71: Open File for write
Cog0     ECode: SUCCESS: No error
Cog0     -> pass
Cog0
Cog0  * Test #72: Write N LONGs
Cog0    Sub-Test Results: Pass: 991, Fail: 0
Cog0
Cog0  * Test #73: ensure no errors on writes
Cog0     ECode: SUCCESS: No error
Cog0     -> pass
Cog0
Cog0    File: [moreThanHeadLongs.bin] pending commit
Cog0    # 2 Blocks in chain:
Cog0      1: [$09DF] HEAD/more, thisID=5, nextId=6, lifeCycle [erased], sig=[$0060_05FD]
Cog0      2: [$0000] BODY/last, thisID=6, endPtr=$000C, lifeCycle [erased], sig=[$00C0_06FE]
Cog0
Cog0  * Test #74: Close written file
Cog0     ECode: SUCCESS: No error
Cog0     -> pass
Cog0
Cog0    File: [moreThanHeadLongs.bin], bytesUsed = 3_964, bytes_free = 4_080, block_count = 2
Cog0
Cog0  * Test #75: Ensure expected file system changes
Cog0  * post file write
Cog0    # FileSystem: 7, 3_961, 6
Cog0    # files: 6
Cog0    # blocks used: 7
Cog0     -> pass
Cog0
Cog0  * Test #76: Ensure expected file stats
Cog0    File: [moreThanHeadLongs.bin]
Cog0    # 2 Blocks in file:
Cog0      1: [$09DF] HEAD/more, thisID=5, nextId=6, lifeCycle [ACTIVE-3], sig=[$0060_057D]
Cog0      2: [$027D] BODY/last, thisID=6, endPtr=$000C, lifeCycle [ACTIVE-3], sig=[$00C0_067E]
Cog0    # blocks: 2
Cog0    # bytes used: 3_964
Cog0     -> pass
Cog0
Cog0  * Test #77: Open File for read
Cog0     ECode: SUCCESS: No error
Cog0     -> pass
Cog0
Cog0  * Test #78: read expected LONGs
Cog0    Sub-Test Results: Pass: 991, Fail: 0
Cog0
Cog0  * Test #79: ensure no errors on reads
Cog0     ECode: SUCCESS: No error
Cog0     -> pass
Cog0
Cog0  * Test #80: BAD: read one more LONG than written
Cog0     ECode: E_END_OF_FILE: no more data available, at end of file
Cog0     -> pass
Cog0
Cog0  * Test #81: Close read file
Cog0     ECode: SUCCESS: No error
Cog0     -> pass
Cog0
Cog0
Cog0   ------------------------------------------------------------
Cog0  * Test Group: Head block + body block * 2 - filled with LONGs full head, full body, + 2
Cog0
Cog0  * Test #82: Open File for write
Cog0     ECode: SUCCESS: No error
Cog0     -> pass
Cog0
Cog0  * Test #83: Write N LONGs
Cog0    Sub-Test Results: Pass: 2_013, Fail: 0
Cog0
Cog0  * Test #84: ensure no errors on writes
Cog0     ECode: SUCCESS: No error
Cog0     -> pass
Cog0
Cog0    File: [moreThanHeadBodyLongs.bin] pending commit
Cog0    # 3 Blocks in chain:
Cog0      1: [$04CA] HEAD/more, thisID=7, nextId=8, lifeCycle [erased], sig=[$0080_07FD]
Cog0      2: [$04F5] BODY/more, thisID=8, nextId=9, lifeCycle [ACTIVE-3], sig=[$0090_087F]
Cog0      3: [$0000] BODY/last, thisID=9, endPtr=$000C, lifeCycle [erased], sig=[$00C0_09FE]
Cog0
Cog0  * Test #85: Close written file
Cog0     ECode: SUCCESS: No error
Cog0     -> pass
Cog0
Cog0    File: [moreThanHeadBodyLongs.bin], bytesUsed = 8_052, bytes_free = 4_080, block_count = 3
Cog0
Cog0  * Test #86: Ensure expected file system changes
Cog0  * post file write
Cog0    # FileSystem: 10, 3_958, 7
Cog0    # files: 7
Cog0    # blocks used: 10
Cog0     -> pass
Cog0
Cog0  * Test #87: Ensure expected file stats
Cog0    File: [moreThanHeadBodyLongs.bin]
Cog0    # 3 Blocks in file:
Cog0      1: [$04CA] HEAD/more, thisID=7, nextId=8, lifeCycle [ACTIVE-3], sig=[$0080_077D]
Cog0      2: [$04F5] BODY/more, thisID=8, nextId=9, lifeCycle [ACTIVE-3], sig=[$0090_087F]
Cog0      3: [$05FF] BODY/last, thisID=9, endPtr=$000C, lifeCycle [ACTIVE-3], sig=[$00C0_097E]
Cog0    # blocks: 3
Cog0    # bytes used: 8_052
Cog0     -> pass
Cog0
Cog0  * Test #88: Open File for read
Cog0     ECode: SUCCESS: No error
Cog0     -> pass
Cog0
Cog0  * Test #89: read expected LONGs
Cog0    -Test Results: Pass: 2_013, Fail: 0
Cog0
Cog0  * Test #90: ensure no errors on reads
Cog0     ECode: SUCCESS: No error
Cog0     -> pass
Cog0
Cog0  * Test #91: BAD: read one more LONG than written
Cog0     ECode: E_END_OF_FILE: no more data available, at end of file
Cog0     -> pass
Cog0
Cog0  * Test #92: Close read file
Cog0     ECode: SUCCESS: No error
Cog0     -> pass
Cog0
Cog0
Cog0   ------------------------------------------------------------
Cog0  * Test Group: Various odd size reads for Issue (#2)
Cog0
Cog0  * Test #93: Determine size of file in bytes
Cog0     ECode: SUCCESS: No error
Cog0     -> pass
Cog0  * working with 8_052 byte file
Cog0
Cog0  * Test #94: Open File for read
Cog0     ECode: SUCCESS: No error
Cog0     -> pass
Cog0
Cog0  * Test #95: read 20 N-length groups of bytes
Cog0    -- Read #1 22 byte(s) - pass
Cog0    -- Read #2 30 byte(s) - pass
Cog0    -- Read #3 29 byte(s) - pass
Cog0    -- Read #4 8 byte(s) - pass
Cog0    -- Read #5 20 byte(s) - pass
Cog0    -- Read #6 9 byte(s) - pass
Cog0    -- Read #7 16 byte(s) - pass
Cog0    -- Read #8 7 byte(s) - pass
Cog0    -- Read #9 9 byte(s) - pass
Cog0    -- Read #10 6 byte(s) - pass
Cog0    -- Read #11 19 byte(s) - pass
Cog0    -- Read #12 26 byte(s) - pass
Cog0    -- Read #13 14 byte(s) - pass
Cog0    -- Read #14 31 byte(s) - pass
Cog0    -- Read #15 31 byte(s) - pass
Cog0    -- Read #16 15 byte(s) - pass
Cog0    -- Read #17 8 byte(s) - pass
Cog0    -- Read #18 21 byte(s) - pass
Cog0    -- Read #19 13 byte(s) - pass
Cog0    -- Read #20 1 byte(s) - pass
Cog0    Sub-Test Results: Pass: 40, Fail: 0
Cog0
Cog0  * Test #96: ensure no errors on reads
Cog0     ECode: SUCCESS: No error
Cog0     -> pass
Cog0
Cog0  * Test #97: Close read file
Cog0     ECode: SUCCESS: No error
Cog0     -> pass
Cog0
Cog0    All Files:
Cog0  rw10bytes.bin, Bytes = 10, ID = 1, @Buff={binary data}
Cog0  rw9words.bin, Bytes = 18, ID = 2, @Buff={binary data}
Cog0  rw12longs.bin, Bytes = 48, ID = 3, @Buff={binary data}
Cog0  rw10strings.zstr, Bytes = 128, ID = 4, @Buff={binary data}
Cog0  fullHeadLongs.bin, Bytes = 3_956, ID = 5, @Buff={binary data}
Cog0  moreThanHeadLongs.bin, Bytes = 3_964, ID = 6, @Buff={binary data}
Cog0  moreThanHeadBodyLongs.bin, Bytes = 8_052, ID = 8, @Buff={binary data}
Cog0
Cog0
Cog0   ------------------------------------------------------------
Cog0  * Test Group: unmount(), mount() - ensure files survive
Cog0     ECode: SUCCESS: No error
Cog0     -> pass
Cog0
Cog0  * Test #98: serial_number()  while FS not mounted
Cog0    Sub-Test Results: Pass: 2, Fail: 0
Cog0
Cog0  * Test #99: serial_number() valid not mounted status
Cog0     ECode: E_NOT_MOUNTED: Filesystem NOT yet accessible
Cog0     -> pass
Cog0
Cog0  * Test #100: open()  while FS not mounted
Cog0     ECode: E_NOT_MOUNTED: Filesystem NOT yet accessible
Cog0     -> pass
Cog0     ECode: SUCCESS: No error
Cog0     -> pass
Cog0
Cog0    All Files:
Cog0  rw10bytes.bin, Bytes = 10, ID = 1, @Buff={binary data}
Cog0  rw9words.bin, Bytes = 18, ID = 2, @Buff={binary data}
Cog0  rw12longs.bin, Bytes = 48, ID = 3, @Buff={binary data}
Cog0  rw10strings.zstr, Bytes = 128, ID = 4, @Buff={binary data}
Cog0  fullHeadLongs.bin, Bytes = 3_956, ID = 5, @Buff={binary data}
Cog0  moreThanHeadLongs.bin, Bytes = 3_964, ID = 6, @Buff={binary data}
Cog0  moreThanHeadBodyLongs.bin, Bytes = 8_052, ID = 8, @Buff={binary data}
Cog0
Cog0  * 100 Tests: , Pass: 102, Fail: 0
Cog0  * Test Complete
