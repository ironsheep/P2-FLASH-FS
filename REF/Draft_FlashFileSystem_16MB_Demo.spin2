CON	_CLKFREQ	= 320_000_000

  debug_top = 20
  'debug_height = 2400
  debug_height = 1000

OBJ     Flash : "Draft_FlashFileSystem_16MB"


VAR byte fbuff[10000]
PUB gox()

  debug("Abort", sdec(\go()))

PUB go() | i

  Flash.format()		'Comment out this line to not erase all files
  Flash.mount()

  ShowStats()			'Do a bunch of file stuff while reporting status, along the way
  ShowFiles()

  WriteFile(@"file1", @file1)
  WriteFile(@"file2", @file2)
  WriteFile(@"file3", @file3)

  AppendFile(@"file2", @"Appended.")
  AppendFile(@"file3", @"Appended.")

  ShowStats()
  ShowFiles()

  if Flash.exists(@"file3") and not Flash.exists(@"Apples")
    Flash.rename(@"file3",@"Apples")

  repeat i from 1 to 10'366+20
    AppendFile2(@"file1")
    ReadFile2(@"file1", @fbuff)
    debug(udec(i), zstr_(@fbuff))

  flash.MakeFile(@"AAA", 12000)

  flash.MakeFile(@"Made", 10000)
  'Flash.delete(@"file1")

  ModifyFile(@"file1", 1, @"abc")

  ShowStats()
  ShowFiles()


PRI ShowStats() | BlocksUsed, BlocksFree, Files

  BlocksUsed, BlocksFree, Files := Flash.stats()
  debug(udec(BlocksUsed, BlocksFree, Files))


PRI ShowFiles() | ID, ByteCount, Handle, Ptr, x, byte Filename[$80], byte Buff[15000]
'PRI ShowFiles() | ID, ByteCount, Handle, Ptr, x, byte Filename[Flash.FILENAME_SIZE], byte Buff[15000]
  repeat
    Flash.directory(@ID, @Filename, @ByteCount)			'get next file
    if Filename[0]						'is there a filename?
      bytefill(@Buff, 0, 100)
      ReadFile(@Filename, @Buff)				'read file
      debug(zstr(@Filename), udec(ByteCount, ID), zstr_(@Buff), zstr_(@Buff + strsize(@Buff) + 1))	'show filename, bytes, ID, and file contents
    else
      quit							'no more files, quit


PRI ReadFile(pFilename, pBuff) | Handle, x

  Handle := Flash.OpenRead(pFilename)				'open file for reading
  repeat Flash.file_size(pFilename)
    byte[pBuff++] := Flash.rd_byte(Handle)			'read bytes

  Flash.close(Handle)						'close file


PRI WriteFile(pFilename, pBuff) | Handle

  debug("Writing: ", zstr_(pFilename))

  Handle := Flash.OpenWrite(pFilename)				'open file for writing

  repeat							'write bytes until 0 written
    Flash.wr_byte(Handle, byte[pBuff])
  while byte[pBuff++]

  Flash.close(Handle)						'close file


PRI AppendFile(pFilename, pBuff) | Handle

  debug("Appending: ", zstr_(pFilename))

  Handle := Flash.OpenAppendFroncate(pFilename, 9)			'open file for appending

  repeat							'write bytes until 0 written
    Flash.wr_byte(Handle, byte[pBuff])
  while byte[pBuff++]

  Flash.close(Handle)						'close file


PRI AppendFile2(pFilename) | Handle

  Handle := Flash.OpenAppendFroncate(pFilename, 10)			'open file for appending
  repeat 11
    Flash.wr_byte(Handle, chr1)
    if chr1 == "9"
      chr1 := "0"
    else
      chr1++
  Flash.close(Handle)						'close file

  'Flash.Truncate(pFilename, 0)


PRI ReadFile2(pFilename, pBuff) | Handle, x

  Handle := Flash.OpenRead(pFilename)				'open file for reading
  repeat Flash.file_size(pFilename)
    byte[pBuff++] := Flash.rd_byte(Handle)			'read bytes
  byte[pBuff] := 0

  Flash.close(Handle)						'close file


PRI ModifyFile(pFilename, Location, pData) | Handle

  Handle := Flash.OpenModify(pFilename)				'open file for appending
  Flash.SeekAbs(Handle, Location)
  repeat strsize(pData)
    Flash.wr_byte(Handle, byte[pData++])
  Flash.close(Handle)						'close file


DAT

file1   byte    "The car goes.",0
file2   byte    "His cat meows.",0
file3   byte    "My boat floats.",0
chr1	byte	"0"
